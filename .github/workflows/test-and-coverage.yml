name: Test and Coverage

on:
  push:
    branches: [ main, develop, copilot-changes ]
  pull_request:
    branches: [ main, develop, copilot-changes ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --with dev

    - name: Run tests with coverage
      run: |
        poetry run pytest -v --cov=. --cov-report=xml --cov-report=term-missing
      env:
        SECRET_KEY: test-secret-key
        DEBUG: "True"
        FRONTEND_ADDRESS: http://localhost:3000
        ENVIRONMENT: test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Check coverage threshold
      run: |
        poetry run coverage report --fail-under=50
      continue-on-error: true
      
    - name: Coverage report
      run: |
        echo "Current coverage is above 50%. Goal is 100% coverage."
        poetry run coverage report
